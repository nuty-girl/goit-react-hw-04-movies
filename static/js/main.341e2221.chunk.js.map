{"version":3,"sources":["routes.js","components/Navigation/Navigation.js","services/tv-api-service.js","pages/HomePage.js","components/Searchbar/Searchbar.js","pages/MoviesPage.js","components/Cast/Cast.js","components/Reviews/Reviews.js","pages/MovieDetailsPage.js","App.js","index.js"],"names":["HOME","MOVIES","MOVIES_DETAILS","MOVIE_CAST","MOVIE_REWIEWS","Navigation","exact","to","routes","style","color","activeStyle","fetchTrendingMovies","fetch","then","res","json","data","results","fetchMovieDetails","movieId","fetchMovieWithQuery","searchQuery","fetchMovieCredits","fetchMovieReviews","HomePage","state","movies","tvApiService","setState","this","props","match","location","map","movie","key","id","pathname","url","from","original_title","Component","Searchbar","value","onChange","e","target","onSubmit","preventDefault","onSearch","type","getQueryPramsFromProps","qs","parse","search","slice","MoviesPage","setSearchQuery","history","push","queryParams","query","prevProps","prevState","prevQuery","nextQuery","Cast","cast","fetchDetails","params","item","cast_id","src","profile_path","alt","name","character","Reviews","reviews","length","review","author","content","MovieDetailsPage","catch","error","console","log","onGoBack","onClick","poster_path","vote_average","overview","genres","genre","path","component","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.341e2221.chunk.js","sourcesContent":["export default {\r\n  HOME: '/',\r\n  MOVIES: '/movies',\r\n  MOVIES_DETAILS: '/movies/:movieId',\r\n  MOVIE_CAST: '/movies/:movieId/cast',\r\n  MOVIE_REWIEWS: '/movies/:movieId/reviews',\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nconst Navigation = () => (\r\n  <ul>\r\n    <li>\r\n      <NavLink\r\n        exact\r\n        to={routes.HOME}\r\n        style={{ color: '#212121' }}\r\n        activeStyle={{ color: 'palevioletred' }}\r\n      >\r\n        Home\r\n      </NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink\r\n        to={routes.MOVIES}\r\n        style={{ color: '#212121' }}\r\n        activeStyle={{ color: 'palevioletred' }}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","const fetchTrendingMovies = () => {\r\n  return fetch(\r\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=45e316a6e984b0f8e49421453627c310',\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      const movies = data.results;\r\n\r\n      return movies;\r\n    });\r\n};\r\n\r\nconst fetchMovieDetails = movieId => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=45e316a6e984b0f8e49421453627c310`,\r\n  ).then(res => res.json());\r\n};\r\n\r\nconst fetchMovieWithQuery = searchQuery => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=45e316a6e984b0f8e49421453627c310&query=${searchQuery}`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      const movies = data.results;\r\n\r\n      return movies;\r\n    });\r\n};\r\n\r\nconst fetchMovieCredits = movieId => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=45e316a6e984b0f8e49421453627c310`,\r\n  ).then(res => res.json());\r\n};\r\n\r\nconst fetchMovieReviews = movieId => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=45e316a6e984b0f8e49421453627c310`,\r\n  ).then(res => res.json());\r\n};\r\n\r\nexport default {\r\n  fetchTrendingMovies,\r\n  fetchMovieDetails,\r\n  fetchMovieWithQuery,\r\n  fetchMovieCredits,\r\n  fetchMovieReviews,\r\n};\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport tvApiService from '../services/tv-api-service';\r\n\r\nexport default class HomePage extends Component {\r\n  static propTypes = {\r\n    match: T.shape({\r\n      url: T.string.isRequired,\r\n    }).isRequired,\r\n    location: T.shape({\r\n      pathname: T.string.isRequired,\r\n      search: T.string.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    tvApiService.fetchTrendingMovies().then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match, location } = this.props;\r\n    const { movies } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Trending today</h1>\r\n        <ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${match.url}movies/${movie.id}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                {movie.original_title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSearch: T.func.isRequired,\r\n  };\r\n\r\n  state = { value: '' };\r\n\r\n  onChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSearch(this.state.value);\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input type=\"text\" value={value} onChange={this.onChange} />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport Searchbar from '../components/Searchbar/Searchbar';\r\nimport tvApiService from '../services/tv-api-service';\r\n\r\nconst getQueryPramsFromProps = props =>\r\n  qs.parse(props.location.search.slice(1));\r\n\r\nexport default class MoviesPage extends Component {\r\n  static propTypes = {\r\n    match: T.shape({\r\n      url: T.string.isRequired,\r\n    }).isRequired,\r\n    location: T.shape({\r\n      pathname: T.string.isRequired,\r\n      search: T.string.isRequired,\r\n    }).isRequired,\r\n    history: T.shape({\r\n      push: T.func.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const queryParams = getQueryPramsFromProps(this.props);\r\n\r\n    if (!queryParams.query) {\r\n      return;\r\n    }\r\n\r\n    tvApiService.fetchMovieWithQuery(queryParams.query).then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { query: prevQuery } = getQueryPramsFromProps(prevProps);\r\n    const { query: nextQuery } = getQueryPramsFromProps(this.props);\r\n\r\n    if (prevQuery === nextQuery) {\r\n      return;\r\n    }\r\n\r\n    tvApiService.fetchMovieWithQuery(nextQuery).then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  setSearchQuery = searchQuery => {\r\n    if (searchQuery) {\r\n      this.props.history.push({\r\n        ...this.props.location,\r\n        search: `query=${searchQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { match, location } = this.props;\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Searchbar onSearch={this.setSearchQuery} />\r\n\r\n        <ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${match.url}/${movie.id}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                {movie.original_title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport tvApiService from '../../services/tv-api-service';\r\n\r\nexport default class Cast extends Component {\r\n  static propTypes = {\r\n    match: T.shape({\r\n      params: T.shape({ movieId: T.string.isRequired }).isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = { cast: [] };\r\n\r\n  componentDidMount() {\r\n    this.fetchDetails();\r\n  }\r\n\r\n  fetchDetails = () => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    tvApiService.fetchMovieCredits(movieId).then(data => {\r\n      const { cast } = data;\r\n      this.setState({ cast });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <ul>\r\n            {cast.map(item => (\r\n              <li key={item.cast_id}>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w154${item.profile_path}`}\r\n                  alt=\"actor_photo\"\r\n                />\r\n                <p>{item.name}</p>\r\n                <p>Character: {item.character}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport tvApiService from '../../services/tv-api-service';\r\n\r\nexport default class Reviews extends Component {\r\n  static propTypes = {\r\n    match: T.shape({\r\n      params: T.shape({ movieId: T.string.isRequired }).isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = { reviews: [] };\r\n\r\n  componentDidMount() {\r\n    this.fetchDetails();\r\n  }\r\n\r\n  fetchDetails = () => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    tvApiService.fetchMovieReviews(movieId).then(data => {\r\n      const reviews = data.results;\r\n      this.setState({ reviews });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <h3>{review.author}</h3>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>We do not have any reviews for this movie</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom';\r\nimport tvApiService from '../services/tv-api-service';\r\nimport routes from '../routes';\r\nimport Cast from '../components/Cast/Cast';\r\nimport Reviews from '../components/Reviews/Reviews';\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  static propTypes = {\r\n    match: T.shape({\r\n      params: T.shape({ movieId: T.string.isRequired }).isRequired,\r\n      url: T.string.isRequired,\r\n    }).isRequired,\r\n    location: T.shape({\r\n      pathname: T.string.isRequired,\r\n      search: T.string.isRequired,\r\n      state: T.object.isRequired,\r\n    }).isRequired,\r\n    history: T.shape({\r\n      push: T.func.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = { movie: null };\r\n\r\n  componentDidMount() {\r\n    this.fetchDetails();\r\n  }\r\n\r\n  fetchDetails = () => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    tvApiService\r\n      .fetchMovieDetails(movieId)\r\n      .then(movie => this.setState({ movie }))\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  onGoBack = () => {\r\n    if (this.props.location.state && this.props.location.state.from) {\r\n      this.props.history.push(this.props.location.state.from);\r\n      return;\r\n    }\r\n\r\n    this.props.history.push(routes.HOME);\r\n  };\r\n\r\n  render() {\r\n    const { movie } = this.state;\r\n    const { match, location } = this.props;\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <button type=\"button\" onClick={this.onGoBack}>\r\n            Go back\r\n          </button>\r\n\r\n          {movie && (\r\n            <>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n                alt=\"poster\"\r\n              />\r\n              <h2>{movie.original_title}</h2>\r\n              <p>User Score: {movie.vote_average * 10}%</p>\r\n              <h3>Overview</h3>\r\n              <p>{movie.overview}</p>\r\n              <h3>Genres</h3>\r\n              <p>\r\n                {movie.genres.map(genre => (\r\n                  <span key={genre.id}> {genre.name}</span>\r\n                ))}\r\n              </p>\r\n              <div>\r\n                <h4>Additional information</h4>\r\n                <ul>\r\n                  <li>\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: `${match.url}/cast`,\r\n                        state: { from: location },\r\n                      }}\r\n                      style={{ color: '#212121' }}\r\n                      activeStyle={{ color: 'palevioletred' }}\r\n                    >\r\n                      Cast\r\n                    </NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: `${match.url}/reviews`,\r\n                        state: { from: location },\r\n                      }}\r\n                      style={{ color: '#212121' }}\r\n                      activeStyle={{ color: 'palevioletred' }}\r\n                    >\r\n                      Reviews\r\n                    </NavLink>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </>\r\n          )}\r\n          <Switch>\r\n            <Route path={routes.MOVIE_CAST} component={Cast} />\r\n            <Route path={routes.MOVIE_REWIEWS} component={Reviews} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport HomePage from './pages/HomePage';\r\nimport MoviesPage from './pages/MoviesPage';\r\nimport MovieDetailsPage from './pages/MovieDetailsPage';\r\nimport routes from './routes';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <div className=\"App\">\r\n      <Navigation />\r\n\r\n      <Switch>\r\n        <Route exact path={routes.HOME} component={HomePage} />\r\n        <Route path={routes.MOVIES_DETAILS} component={MovieDetailsPage} />\r\n        <Route path={routes.MOVIES} component={MoviesPage} />\r\n        <Redirect to={routes.HOME} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}